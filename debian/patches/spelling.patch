From: Michael Tokarev <mjt@tls.msk.ru>
Date: Fri, 1 Apr 2022 10:07:47 +0300
Subject: spelling: connnect encrytion exisit expection explicit
 invalide missmatch paramater paramter partion privilige relase reponse
 seperate unkown verson authencication progagated

Tree-wide spellcheck for some common misspellings.

source3/utils/status.c has misspelled local variable (unkown_dialect).

missmatch is a known historical misspelling, only the incorrect misspellings
are fixed.

source3/locale/net/de.po has the spelling error (unkown) in two msgids -
it probably should be updated with current source.

Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>
---
 auth/gensec/gensec.h                                      | 4 ++--
 bootstrap/config.py                                       | 2 +-
 docs-xml/build/DTD/samba.entities                         | 4 ++--
 docs-xml/manpages/net.8.xml                               | 2 +-
 docs-xml/manpages/smbcacls.1.xml                          | 2 +-
 docs-xml/manpages/vfs_widelinks.8.xml                     | 2 +-
 docs-xml/smbdotconf/security/clientusekerberos.xml        | 2 +-
 docs-xml/smbdotconf/security/ntlmauth.xml                 | 2 +-
 docs-xml/smbdotconf/security/serverschannel.xml           | 2 +-
 docs-xml/smbdotconf/tuning/usemmap.xml                    | 2 +-
 libcli/smb/smbXcli_base.c                                 | 4 ++--
 libgpo/admx/en-US/samba.adml                              | 4 ++--
 librpc/idl/netlogon.idl                                   | 2 +-
 python/samba/tests/smb-notify.py                          | 4 ++--
 source3/locale/net/de.po                                  | 4 ++--
 source3/rpc_client/cli_mdssvc.c                           | 6 +++---
 source3/rpc_server/mdssvc/marshalling.c                   | 2 +-
 source3/rpc_server/mdssvc/mdssvc.c                        | 2 +-
 source3/smbd/files.c                                      | 2 +-
 source3/utils/smbcacls.c                                  | 2 +-
 source3/utils/status.c                                    | 6 +++---
 source3/winbindd/winbindd.c                               | 2 +-
 source4/dsdb/samdb/ldb_modules/partition.c                | 2 +-
 source4/scripting/bin/samba_upgradedns                    | 2 +-
 .../AD_DS_Attributes__Windows_Server_2012_R2.ldf          | 2 +-
 .../ad-schema/AD_DS_Attributes__Windows_Server_2016.ldf   | 2 +-
 .../Attributes_for_AD_DS__Windows_Server_2008_R2.ldf      | 2 +-
 .../Attributes_for_AD_DS__Windows_Server_2012.ldf         | 2 +-
 source4/torture/libsmbclient/libsmbclient.c               | 8 ++++----
 source4/torture/rpc/samba3rpc.c                           | 2 +-
 source4/torture/smb2/session.c                            | 2 +-
 31 files changed, 44 insertions(+), 44 deletions(-)

diff --git a/auth/gensec/gensec.h b/auth/gensec/gensec.h
index 53fb1e43244..29d5e92c130 100644
--- a/auth/gensec/gensec.h
+++ b/auth/gensec/gensec.h
@@ -158,7 +158,7 @@ NTSTATUS gensec_update_recv(struct tevent_req *req, TALLOC_CTX *out_mem_ctx, DAT
  * The features must be requested before starting the
  * gensec_update*() loop.
  *
- * The current expection is GENSEC_FEATURE_SIGN_PKT_HEADER,
+ * The current exception is GENSEC_FEATURE_SIGN_PKT_HEADER,
  * it can also be requested once the gensec_update*() loop
  * returned NT_STATUS_OK.
  *
@@ -181,7 +181,7 @@ void gensec_want_feature(struct gensec_security *gensec_security,
  * The features must be requested after the finished
  * gensec_update*() loop.
  *
- * The current expection is GENSEC_FEATURE_SIGN_PKT_HEADER,
+ * The current exception is GENSEC_FEATURE_SIGN_PKT_HEADER,
  * it can also be requested before the gensec_update*() loop,
  * as the return value only indicates if the backend supports
  * dcerpc header signing, not if header signing will be used
diff --git a/bootstrap/config.py b/bootstrap/config.py
index 621912a7d94..5138eddef49 100644
--- a/bootstrap/config.py
+++ b/bootstrap/config.py
@@ -125,7 +125,7 @@ PKGS = [
     ('apt-utils', 'yum-utils'),
     ('pkg-config', 'pkgconfig'),
     ('procps', 'procps-ng'),  # required for the free cmd in tests
-    ('lsb-release', 'lsb-release'),  # we need lsb_relase to show info
+    ('lsb-release', 'lsb-release'),  # we need lsb_release to show info
     ('', 'rpcgen'),  # required for test
     # refer: https://fedoraproject.org/wiki/Changes/SunRPCRemoval
     ('', 'libtirpc-devel'),  # for <rpc/rpc.h> header on fedora
diff --git a/docs-xml/build/DTD/samba.entities b/docs-xml/build/DTD/samba.entities
index 0a4a21db63e..15a5ba83fb9 100644
--- a/docs-xml/build/DTD/samba.entities
+++ b/docs-xml/build/DTD/samba.entities
@@ -599,7 +599,7 @@
 			prompted. The client will first check the
 			<envar>USER</envar> environment variable
 			(which is also permitted to also contain the
-			password seperated by a &pct;), then the
+			password separated by a &pct;), then the
 			<envar>LOGNAME</envar> variable (which is not
 			permitted to contain a password) and if either exists,
 			the value is used. If these environmental
@@ -765,7 +765,7 @@
 			 This parameter determines whether Samba client tools
 			 will try to authenticate using Kerberos. For Kerberos
 			 authentication you need to use dns names instead of IP
-			 addresses when connnecting to a service.
+			 addresses when connecting to a service.
 		</para>
 
 		<para>
diff --git a/docs-xml/manpages/net.8.xml b/docs-xml/manpages/net.8.xml
index 1bd82933137..5a37119aa20 100644
--- a/docs-xml/manpages/net.8.xml
+++ b/docs-xml/manpages/net.8.xml
@@ -3045,7 +3045,7 @@ Provisions a machine account in AD. This command needs network connectivity to t
 
 <listitem><para><replaceable>DEFPWD</replaceable> is an optional parameter that can be set to enforce using the default machine account password. The use of this parameter is not recommended as the default machine account password can be easily guessed. </para></listitem>
 
-<listitem><para><replaceable>REUSE</replaceable> is an optional parameter that can be set to enforce reusing an exisiting machine account in AD.</para></listitem>
+<listitem><para><replaceable>REUSE</replaceable> is an optional parameter that can be set to enforce reusing an existing machine account in AD.</para></listitem>
 
 <listitem><para><replaceable>SAVEFILE</replaceable> is an optional parameter to store the generated provisioning data on disk.</para></listitem>
 
diff --git a/docs-xml/manpages/smbcacls.1.xml b/docs-xml/manpages/smbcacls.1.xml
index 9cc2d66a898..ef504b41051 100644
--- a/docs-xml/manpages/smbcacls.1.xml
+++ b/docs-xml/manpages/smbcacls.1.xml
@@ -356,7 +356,7 @@ ACL:&lt;sid or name&gt;:&lt;type&gt;/&lt;flags&gt;/&lt;mask&gt;
 		flag is set. </para>
 		</listitem>
 		<listitem><para>When an ACE with the (OI) flag alone set is
-		progagated to a child folder the inheritance only flag (IO) is
+		propagated to a child folder the inheritance only flag (IO) is
 		also applied. This indicates the permissions associated with
 		the ACE don't apply to the folder itself (only to it's
 		child files). When applying the ACE to a child file the ACE is
diff --git a/docs-xml/manpages/vfs_widelinks.8.xml b/docs-xml/manpages/vfs_widelinks.8.xml
index b8973701d23..38246508905 100644
--- a/docs-xml/manpages/vfs_widelinks.8.xml
+++ b/docs-xml/manpages/vfs_widelinks.8.xml
@@ -31,7 +31,7 @@
 
 	<para>The <command>vfs_widelinks</command> VFS module
 	hides the existence of symbolic links in the filesystem
-	inside a share. It is used in Samba verson 4.13 and above
+	inside a share. It is used in Samba version 4.13 and above
 	to implement the <filename>smb.conf</filename>"wide links = yes"
 	functionality that used to be inside the core smbd code.
 	The module should not be loaded explicitly by smb.conf
diff --git a/docs-xml/smbdotconf/security/clientusekerberos.xml b/docs-xml/smbdotconf/security/clientusekerberos.xml
index 33dd2ac8e23..ad35dcf3aca 100644
--- a/docs-xml/smbdotconf/security/clientusekerberos.xml
+++ b/docs-xml/smbdotconf/security/clientusekerberos.xml
@@ -8,7 +8,7 @@
 	<para>
 		This parameter determines whether Samba client tools will try
 		to authenticate using Kerberos. For Kerberos authentication you
-		need to use dns names instead of IP addresses when connnecting
+		need to use dns names instead of IP addresses when connecting
 		to a service.
 	</para>
 
diff --git a/docs-xml/smbdotconf/security/ntlmauth.xml b/docs-xml/smbdotconf/security/ntlmauth.xml
index 9fa3d5c1ce5..728f1d39619 100644
--- a/docs-xml/smbdotconf/security/ntlmauth.xml
+++ b/docs-xml/smbdotconf/security/ntlmauth.xml
@@ -9,7 +9,7 @@
     authenticate users using the NTLM encrypted password response for
     this local passdb (SAM or account database). </para>
 
-    <para>If disabled, both NTLM and LanMan authencication against the
+    <para>If disabled, both NTLM and LanMan authentication against the
     local passdb is disabled.</para>
 
     <para>Note that these settings apply only to local users,
diff --git a/docs-xml/smbdotconf/security/serverschannel.xml b/docs-xml/smbdotconf/security/serverschannel.xml
index b682d086f76..cd2543113f3 100644
--- a/docs-xml/smbdotconf/security/serverschannel.xml
+++ b/docs-xml/smbdotconf/security/serverschannel.xml
@@ -37,7 +37,7 @@
 <description>
 
     <para>If you still have legacy domain members, which required "server schannel = auto" before,
-	it is possible to specify explicit expection per computer account
+	it is possible to specify explicit exception per computer account
 	by using 'server require schannel:COMPUTERACCOUNT = no' as option.
 	Note that COMPUTERACCOUNT has to be the sAMAccountName value of
 	the computer account (including the trailing '$' sign).
diff --git a/docs-xml/smbdotconf/tuning/usemmap.xml b/docs-xml/smbdotconf/tuning/usemmap.xml
index 9a02501fad9..40ca7b99d81 100644
--- a/docs-xml/smbdotconf/tuning/usemmap.xml
+++ b/docs-xml/smbdotconf/tuning/usemmap.xml
@@ -6,7 +6,7 @@
     <para>This global parameter determines if the tdb internals of Samba can
     depend on mmap working correctly on the running system. Samba requires a coherent
     mmap/read-write system memory cache. Currently only OpenBSD and HPUX do not have such a
-    coherent cache, and on those platforms this paramter is overridden internally
+    coherent cache, and on those platforms this parameter is overridden internally
     to be effeceively <constant>no</constant>. On all systems this parameter should be left alone. This
     parameter is provided to help the Samba developers track down problems with
     the tdb internal code.
diff --git a/libcli/smb/smbXcli_base.c b/libcli/smb/smbXcli_base.c
index 7579fa1c378..ef92c1be1fd 100644
--- a/libcli/smb/smbXcli_base.c
+++ b/libcli/smb/smbXcli_base.c
@@ -1761,7 +1761,7 @@ static NTSTATUS smb1cli_req_writev_submit(struct tevent_req *req,
 	}
 
 	/*
-	 * If we supported multiple encrytion contexts
+	 * If we supported multiple encryption contexts
 	 * here we'd look up based on tid.
 	 */
 	if (common_encryption_on(state->conn->smb1.trans_enc)) {
@@ -2228,7 +2228,7 @@ static NTSTATUS smb1cli_conn_dispatch_incoming(struct smbXcli_conn *conn,
 	}
 
 	/*
-	 * If we supported multiple encrytion contexts
+	 * If we supported multiple encryption contexts
 	 * here we'd look up based on tid.
 	 */
 	if (common_encryption_on(conn->smb1.trans_enc)
diff --git a/libgpo/admx/en-US/samba.adml b/libgpo/admx/en-US/samba.adml
index 7bac33c4554..2b1b520ca62 100755
--- a/libgpo/admx/en-US/samba.adml
+++ b/libgpo/admx/en-US/samba.adml
@@ -1963,7 +1963,7 @@ Example: /opt/mit/sbin/krb5kdc</string>
  authenticate users using the NTLM encrypted password response for
  this local passdb (SAM or account database).
 
- If disabled, both NTLM and LanMan authencication against the
+ If disabled, both NTLM and LanMan authentication against the
  local passdb is disabled.
 
  Note that these settings apply only to local users,
@@ -2836,7 +2836,7 @@ Example: IPTOS_LOWDELAY</string>
       <string id="POL_3FD02174_8A27_5426_848C_B3123EA8C4C3_Help">This global parameter determines if the tdb internals of Samba can
  depend on mmap working correctly on the running system. Samba requires a coherent
  mmap/read-write system memory cache. Currently only OpenBSD and HPUX do not have such a
- coherent cache, and on those platforms this paramter is overridden internally
+ coherent cache, and on those platforms this parameter is overridden internally
  to be effeceively no. On all systems this parameter should be left alone. This
  parameter is provided to help the Samba developers track down problems with
  the tdb internal code.</string>
diff --git a/librpc/idl/netlogon.idl b/librpc/idl/netlogon.idl
index cbfc88fe078..5806825a1e6 100644
--- a/librpc/idl/netlogon.idl
+++ b/librpc/idl/netlogon.idl
@@ -1132,7 +1132,7 @@ interface netlogon
 	/*****************/
 	/* Function 0x14 */
 
-	/* one unkown bit still: DS_IP_VERSION_AGNOSTIC - gd*/
+	/* one unknown bit still: DS_IP_VERSION_AGNOSTIC - gd*/
 
 	const int DSGETDC_VALID_FLAGS = (DS_FORCE_REDISCOVERY |
 					 DS_DIRECTORY_SERVICE_REQUIRED |
diff --git a/python/samba/tests/smb-notify.py b/python/samba/tests/smb-notify.py
index 2f42263be25..c06eabe30c7 100755
--- a/python/samba/tests/smb-notify.py
+++ b/python/samba/tests/smb-notify.py
@@ -295,14 +295,14 @@ class SMBNotifyTests(TestCase):
         set_secinfo = security.SECINFO_GROUP | security.SECINFO_DACL | security.SECINFO_PROTECTED_DACL
         smb_helper.set_acl(private_path, private_path_sd_new, sinfo=set_secinfo)
 
-        # setup notification request as priviliged user
+        # setup notification request as privileged user
         monitor_priv_fnum = self.smb_conn.create(Name=monitor_path, ShareAccess=1)
         notify_priv = self.smb_conn.notify(fnum=monitor_priv_fnum,
                                            buffer_size=0xffff,
                                            completion_filter=libsmb.FILE_NOTIFY_CHANGE_ALL,
                                            recursive=True)
 
-        # setup notification request as unpriviliged user
+        # setup notification request as unprivileged user
         monitor_unpriv_fnum = self.smb_conn_unpriv.create(Name=monitor_path, ShareAccess=1)
         notify_unpriv = self.smb_conn_unpriv.notify(fnum=monitor_unpriv_fnum,
                                                     buffer_size=0xffff,
diff --git a/source3/locale/net/de.po b/source3/locale/net/de.po
index c71ffbb9ed8..95d62990dbb 100644
--- a/source3/locale/net/de.po
+++ b/source3/locale/net/de.po
@@ -6335,7 +6335,7 @@ msgstr ""
 
 #: ../../utils/net_rpc_printer.c:1305
 #, c-format
-msgid "unkown action: %d\n"
+msgid "unknown action: %d\n"
 msgstr ""
 
 #: ../../utils/net_rpc_printer.c:1331
@@ -6365,7 +6365,7 @@ msgstr ""
 
 #: ../../utils/net_rpc_printer.c:1458
 #, c-format
-msgid "unkown state: %d\n"
+msgid "unknown state: %d\n"
 msgstr "unbekannter Status: %d\n"
 
 #: ../../utils/net_rpc_printer.c:1528 ../../utils/net_rpc_printer.c:1675 ../../utils/net_rpc_printer.c:1858 ../../utils/net_rpc_printer.c:2047 ../../utils/net_rpc_printer.c:2214
diff --git a/source3/rpc_client/cli_mdssvc.c b/source3/rpc_client/cli_mdssvc.c
index 82d14372fe4..046d37135cb 100644
--- a/source3/rpc_client/cli_mdssvc.c
+++ b/source3/rpc_client/cli_mdssvc.c
@@ -347,7 +347,7 @@ static void mdscli_search_cmd_done(struct tevent_req *subreq)
 			     "DALLOC_CTX", 0,
 			     "uint64_t", 0);
 	if (uint64p == NULL) {
-		DBG_DEBUG("Unexpected mds reponse: %s", dalloc_dump(d, 0));
+		DBG_DEBUG("Unexpected mds response: %s", dalloc_dump(d, 0));
 		tevent_req_nterror(req, NT_STATUS_INTERNAL_ERROR);
 		return;
 	}
@@ -531,7 +531,7 @@ static void mdscli_get_results_cmd_done(struct tevent_req *subreq)
 			     "DALLOC_CTX", 0,
 			     "uint64_t", 0);
 	if (uint64p == NULL) {
-		DBG_DEBUG("Unexpected mds reponse: %s", dalloc_dump(d, 0));
+		DBG_DEBUG("Unexpected mds response: %s", dalloc_dump(d, 0));
 		tevent_req_nterror(req, NT_STATUS_INTERNAL_ERROR);
 		return;
 	}
@@ -755,7 +755,7 @@ static void mdscli_get_path_done(struct tevent_req *subreq)
 			  "DALLOC_CTX", 1,
 			  "char *", 0);
 	if (path == NULL) {
-		DBG_DEBUG("No path in mds reponse: %s", dalloc_dump(d, 0));
+		DBG_DEBUG("No path in mds response: %s", dalloc_dump(d, 0));
 		tevent_req_nterror(req, NT_STATUS_INTERNAL_ERROR);
 		return;
 	}
diff --git a/source3/rpc_server/mdssvc/marshalling.c b/source3/rpc_server/mdssvc/marshalling.c
index 1aa750413cd..9ba6ef571f2 100644
--- a/source3/rpc_server/mdssvc/marshalling.c
+++ b/source3/rpc_server/mdssvc/marshalling.c
@@ -1050,7 +1050,7 @@ static ssize_t sl_unpack_cpx(DALLOC_CTX *query,
 		break;
 
 	default:
-		DEBUG(1, ("unkown complex query type: %u", cpx_query_type));
+		DEBUG(1, ("unknown complex query type: %u", cpx_query_type));
 		return -1;
 	}
 
diff --git a/source3/rpc_server/mdssvc/mdssvc.c b/source3/rpc_server/mdssvc/mdssvc.c
index fa31b55a183..d6684901172 100644
--- a/source3/rpc_server/mdssvc/mdssvc.c
+++ b/source3/rpc_server/mdssvc/mdssvc.c
@@ -464,7 +464,7 @@ static bool inode_map_add(struct sl_query *slq, uint64_t ino, const char *path)
 		 */
 
 		if (value.dsize != sizeof(void *)) {
-			DEBUG(1, ("invalide dsize\n"));
+			DEBUG(1, ("invalid dsize\n"));
 			return false;
 		}
 		memcpy(&p, value.dptr, sizeof(p));
diff --git a/source3/smbd/files.c b/source3/smbd/files.c
index 677b600d0a6..840117666d9 100644
--- a/source3/smbd/files.c
+++ b/source3/smbd/files.c
@@ -516,7 +516,7 @@ NTSTATUS openat_pathref_fsp(const struct files_struct *dirfsp,
 		{
 			/*
 			 * streams_xattr return NT_STATUS_NOT_FOUND for
-			 * opens of not yet exisiting streams.
+			 * opens of not yet existing streams.
 			 *
 			 * ELOOP maps to NT_STATUS_OBJECT_PATH_NOT_FOUND
 			 * and this will result from a open request from
diff --git a/source3/utils/smbcacls.c b/source3/utils/smbcacls.c
index 661d4eacf3e..4e21ede74d9 100644
--- a/source3/utils/smbcacls.c
+++ b/source3/utils/smbcacls.c
@@ -1174,7 +1174,7 @@ static NTSTATUS prepare_inheritance_propagation(TALLOC_CTX *ctx, char *filename,
 	for (j = 0; sd->dacl && j < sd->dacl->num_aces; j++) {
 		struct security_ace *ace = &sd->dacl->aces[j];
 		if (ace->flags & SEC_ACE_FLAG_INHERITED_ACE) {
-			d_printf("Illegal paramater %s\n", the_acl);
+			d_printf("Illegal parameter %s\n", the_acl);
 			result = NT_STATUS_UNSUCCESSFUL;
 			goto out;
 		}
diff --git a/source3/utils/status.c b/source3/utils/status.c
index f982edfa834..e860436d72b 100644
--- a/source3/utils/status.c
+++ b/source3/utils/status.c
@@ -288,7 +288,7 @@ static void print_brl(struct file_id id,
 
 static const char *session_dialect_str(uint16_t dialect)
 {
-	static fstring unkown_dialect;
+	static fstring unknown_dialect;
 
 	switch(dialect){
 	case SMB2_DIALECT_REVISION_000:
@@ -311,8 +311,8 @@ static const char *session_dialect_str(uint16_t dialect)
 		return "SMB3_11";
 	}
 
-	fstr_sprintf(unkown_dialect, "Unknown (0x%04x)", dialect);
-	return unkown_dialect;
+	fstr_sprintf(unknown_dialect, "Unknown (0x%04x)", dialect);
+	return unknown_dialect;
 }
 
 static int traverse_connections(const struct connections_data *crec,
diff --git a/source3/winbindd/winbindd.c b/source3/winbindd/winbindd.c
index 0f9c6449a5a..5d263b9f0ba 100644
--- a/source3/winbindd/winbindd.c
+++ b/source3/winbindd/winbindd.c
@@ -1792,7 +1792,7 @@ int main(int argc, const char **argv)
 		size_t sun_path_len = sizeof(un.sun_path);
 
 		if (winbindd_priv_socket_len >= sun_path_len) {
-			DBG_ERR("The winbind priviliged socket path [%s/%s] is too long "
+			DBG_ERR("The winbind privileged socket path [%s/%s] is too long "
 				"(%zu >= %zu)\n",
 				winbindd_priv_socket_dir,
 				WINBINDD_SOCKET_NAME,
diff --git a/source4/dsdb/samdb/ldb_modules/partition.c b/source4/dsdb/samdb/ldb_modules/partition.c
index 2544a106d13..0f9d9c199a9 100644
--- a/source4/dsdb/samdb/ldb_modules/partition.c
+++ b/source4/dsdb/samdb/ldb_modules/partition.c
@@ -1224,7 +1224,7 @@ int partition_del_trans(struct ldb_module *module)
 	bool trace = module && ldb_module_flags(ldb) & LDB_FLG_ENABLE_TRACING;
 
 	if (data == NULL) {
-		DEBUG(0,("partion delete transaction with no private data\n"));
+		DEBUG(0,("partition delete transaction with no private data\n"));
 		return ldb_operr(ldb);
 	}
 
diff --git a/source4/scripting/bin/samba_upgradedns b/source4/scripting/bin/samba_upgradedns
index ac2fdfca5ef..afc580779b7 100755
--- a/source4/scripting/bin/samba_upgradedns
+++ b/source4/scripting/bin/samba_upgradedns
@@ -527,7 +527,7 @@ if __name__ == '__main__':
     elif opts.dns_backend == "SAMBA_INTERNAL":
         # Make sure to remove everything from the bind-dns directory to avoid
         # possible security issues with the named group having write access
-        # to all AD partions
+        # to all AD partitions
         cleanup_remove_file(os.path.join(paths.binddns_dir, "dns.keytab"))
         cleanup_remove_file(os.path.join(paths.binddns_dir, "named.conf"))
         cleanup_remove_file(os.path.join(paths.binddns_dir, "named.conf.update"))
diff --git a/source4/setup/ad-schema/AD_DS_Attributes__Windows_Server_2012_R2.ldf b/source4/setup/ad-schema/AD_DS_Attributes__Windows_Server_2012_R2.ldf
index ef839bdaaf9..467c8276529 100644
--- a/source4/setup/ad-schema/AD_DS_Attributes__Windows_Server_2012_R2.ldf
+++ b/source4/setup/ad-schema/AD_DS_Attributes__Windows_Server_2012_R2.ldf
@@ -7682,7 +7682,7 @@ isSingleValued: FALSE
 rangeUpper: 128
 showInAdvancedViewOnly: TRUE
 adminDisplayName: macAddress
-adminDescription: MAC address in maximal, colon seperated hex notation
+adminDescription: MAC address in maximal, colon separated hex notation
 oMSyntax: 22
 searchFlags: 0
 lDAPDisplayName: macAddress
diff --git a/source4/setup/ad-schema/AD_DS_Attributes__Windows_Server_2016.ldf b/source4/setup/ad-schema/AD_DS_Attributes__Windows_Server_2016.ldf
index e4c5e6044bb..5a5c2455e9b 100644
--- a/source4/setup/ad-schema/AD_DS_Attributes__Windows_Server_2016.ldf
+++ b/source4/setup/ad-schema/AD_DS_Attributes__Windows_Server_2016.ldf
@@ -25142,7 +25142,7 @@ isSingleValued: FALSE
 rangeUpper: 128
 showInAdvancedViewOnly: TRUE
 adminDisplayName: macAddress
-adminDescription: MAC address in maximal, colon seperated hex notation
+adminDescription: MAC address in maximal, colon separated hex notation
 oMSyntax: 22
 searchFlags: 0
 lDAPDisplayName: macAddress
diff --git a/source4/setup/ad-schema/Attributes_for_AD_DS__Windows_Server_2008_R2.ldf b/source4/setup/ad-schema/Attributes_for_AD_DS__Windows_Server_2008_R2.ldf
index 97e70e077f6..5a739468521 100644
--- a/source4/setup/ad-schema/Attributes_for_AD_DS__Windows_Server_2008_R2.ldf
+++ b/source4/setup/ad-schema/Attributes_for_AD_DS__Windows_Server_2008_R2.ldf
@@ -7682,7 +7682,7 @@ isSingleValued: FALSE
 rangeUpper: 128
 showInAdvancedViewOnly: TRUE
 adminDisplayName: macAddress
-adminDescription: MAC address in maximal, colon seperated hex notation
+adminDescription: MAC address in maximal, colon separated hex notation
 oMSyntax: 22
 searchFlags: 0
 lDAPDisplayName: macAddress
diff --git a/source4/setup/ad-schema/Attributes_for_AD_DS__Windows_Server_2012.ldf b/source4/setup/ad-schema/Attributes_for_AD_DS__Windows_Server_2012.ldf
index 4395cad679f..9d72b137cab 100644
--- a/source4/setup/ad-schema/Attributes_for_AD_DS__Windows_Server_2012.ldf
+++ b/source4/setup/ad-schema/Attributes_for_AD_DS__Windows_Server_2012.ldf
@@ -7682,7 +7682,7 @@ isSingleValued: FALSE
 rangeUpper: 128
 showInAdvancedViewOnly: TRUE
 adminDisplayName: macAddress
-adminDescription: MAC address in maximal, colon seperated hex notation
+adminDescription: MAC address in maximal, colon separated hex notation
 oMSyntax: 22
 searchFlags: 0
 lDAPDisplayName: macAddress
diff --git a/source4/torture/libsmbclient/libsmbclient.c b/source4/torture/libsmbclient/libsmbclient.c
index b04dbde04ac..82f64c38b69 100644
--- a/source4/torture/libsmbclient/libsmbclient.c
+++ b/source4/torture/libsmbclient/libsmbclient.c
@@ -668,7 +668,7 @@ static bool torture_libsmbclient_readdirplus_seek(struct torture_context *tctx)
 		success,
 		done,
 		talloc_asprintf(tctx,
-				"after seek (20) readdir name missmatch "
+				"after seek (20) readdir name mismatch "
 				"file %s - got %s\n",
 				dirent_20->name,
 				getdentries[0].name));
@@ -700,7 +700,7 @@ static bool torture_libsmbclient_readdirplus_seek(struct torture_context *tctx)
 		success,
 		done,
 		talloc_asprintf(tctx,
-				"after seek (20) readdirplus name missmatch "
+				"after seek (20) readdirplus name mismatch "
 				"file %s - got %s\n",
 				dirent_20->name,
 				direntries_20->name));
@@ -733,7 +733,7 @@ static bool torture_libsmbclient_readdirplus_seek(struct torture_context *tctx)
 		success,
 		done,
 		talloc_asprintf(tctx,
-				"after seek (20) readdirplus2 name missmatch "
+				"after seek (20) readdirplus2 name mismatch "
 				"file %s - got %s\n",
 				dirent_20->name,
 				direntries_20->name));
@@ -937,7 +937,7 @@ static bool torture_libsmbclient_readdirplus2(struct torture_context *tctx)
 		success,
 		done,
 		talloc_asprintf(tctx,
-			"filename '%s' ino missmatch. "
+			"filename '%s' ino mismatch. "
 			"From smbc_readdirplus2 = %"PRIx64" "
 			"From smbc_stat = %"PRIx64"",
 			filename,
diff --git a/source4/torture/rpc/samba3rpc.c b/source4/torture/rpc/samba3rpc.c
index ff5dc1d6800..39e43e5fcdb 100644
--- a/source4/torture/rpc/samba3rpc.c
+++ b/source4/torture/rpc/samba3rpc.c
@@ -4626,7 +4626,7 @@ static bool torture_rpc_pipes_supported_interfaces(
 	struct dcerpc_pipe *pipe2;
 	struct dcerpc_pipe *pipe3;
 
-	torture_comment(torture, "Testing only appropiate interfaces are "
+	torture_comment(torture, "Testing only appropriate interfaces are "
 			"available in smb pipes\n");
 
 	mem_ctx = talloc_init("torture_samba3_rpc_pipes_supported_interfaces");
diff --git a/source4/torture/smb2/session.c b/source4/torture/smb2/session.c
index fdfd947d5e3..92f9e638ff4 100644
--- a/source4/torture/smb2/session.c
+++ b/source4/torture/smb2/session.c
@@ -2724,7 +2724,7 @@ static bool test_session_bind_negative_smb202(struct torture_context *tctx, stru
 	encrypted = smb2cli_tcon_is_encryption_on(tree0->smbXcli);
 	if (encrypted) {
 		torture_skip(tctx,
-			     "Can't test SMB 2.02 if encrytion is required");
+			     "Can't test SMB 2.02 if encryption is required");
 	}
 
 	options1 = transport0->options;
-- 
2.30.2

